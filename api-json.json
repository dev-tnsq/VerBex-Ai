{"openapi":"3.0.0","paths":{"/health":{"get":{"operationId":"AppController_checkHealth","parameters":[],"responses":{"200":{"description":""}},"summary":"Health check","tags":["App"]}},"/register":{"post":{"operationId":"AuthController_register","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthRegisterDto"}}}},"responses":{"201":{"description":"Returns JWT token"}},"summary":"Register a new user","tags":["Auth"]}},"/login":{"post":{"description":"**System Function**: Authenticates a user with email/password credentials and returns JWT tokens for API access.\n    This endpoint validates user credentials and provides both access and refresh tokens. The access token is used for authenticating API requests, while the refresh token can be used to obtain new access tokens when they expire.","operationId":"AuthController_login","parameters":[],"requestBody":{"required":true,"description":"User login credentials.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthLoginDto"},"examples":{"User login":{"value":{"email":"user@example.com","password":"SecurePassword123!"}}}}}},"responses":{"200":{"description":"Authentication successful","content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string","description":"Username of the authenticated user"},"role":{"type":"string","enum":["USER","ADMIN"],"description":"Role of the authenticated user"},"accessToken":{"type":"string","description":"JWT access token for API authentication"},"refreshToken":{"type":"string","description":"JWT refresh token for renewing access tokens"}}}}}},"401":{"description":"Unauthorized - invalid credentials"}},"summary":"Authenticate user and obtain JWT tokens","tags":["Auth"]}},"/refresh":{"post":{"description":"**System Function**: Obtains a new access token using a valid refresh token.\n    This endpoint allows users to refresh their expired access tokens without requiring re-authentication. Users must provide their valid refresh token to receive new access and refresh tokens.","operationId":"AuthController_refreshTokens","parameters":[],"requestBody":{"required":true,"description":"Refresh token to obtain new access token","content":{"application/json":{"schema":{"type":"object","properties":{"accessToken":{"type":"string","description":"The access token provided by the user"}},"example":{"accessToken":"your-access-token-here"}}}}},"responses":{"200":{"description":"Token refresh successful","content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string","description":"Username of the user"},"role":{"type":"string","enum":["USER","ADMIN"],"description":"Role of the user"},"accessToken":{"type":"string","description":"New JWT access token for API authentication"},"refreshToken":{"type":"string","description":"New JWT refresh token for future renewals"}}}}}},"401":{"description":"Unauthorized - invalid or expired refresh token"}},"summary":"Refresh JWT access token","tags":["Auth"]}},"/api-keys/generate":{"post":{"description":"Generates a new API key for the authenticated user. Only one API key per user is allowed - generating a new one will revoke the previous one.","operationId":"ApiKeysController_generateApiKey","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Optional name for the API key","example":"My Server API Key"}}}}}},"responses":{"201":{"description":"API key generated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"key":{"type":"string","example":"sk_1234567890abcdef..."},"id":{"type":"number","example":1}}}}}}},"security":[{"bearer":[]}],"summary":"Generate API Key","tags":["API Keys"]}},"/api-keys":{"get":{"description":"Retrieves all API keys for the authenticated user","operationId":"ApiKeysController_getUserApiKeys","parameters":[],"responses":{"200":{"description":"API keys retrieved successfully","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"key":{"type":"string"},"createdAt":{"type":"string"},"lastUsedAt":{"type":"string","nullable":true}}}}}}}},"security":[{"bearer":[]}],"summary":"Get API Keys","tags":["API Keys"]}},"/api-keys/{keyId}/revoke":{"post":{"description":"Revokes an API key for the authenticated user","operationId":"ApiKeysController_revokeApiKey","parameters":[],"responses":{"200":{"description":"API key revoked successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean"}}}}}}},"security":[{"bearer":[]}],"summary":"Revoke API Key","tags":["API Keys"]}},"/factory/address":{"get":{"description":"Retrieves the address of the factory contract for a specific network.\n\n    GET /address?network=mainnet","operationId":"FactoryController_getDefindexFactoryAddress","parameters":[{"name":"network","required":true,"in":"query","description":"Network to retrieve the factory address for. Supported values: mainnet, testnet","schema":{"enum":["testnet","mainnet"],"type":"string"}}],"responses":{"200":{"description":"Returns the factory address for the specified network.","content":{"application/json":{"schema":{"type":"string"}}}},"400":{"description":"Bad Request. Network parameter is required."},"404":{"description":"Not Found. No factory contract deployed for this network."},"500":{"description":"Internal Server Error. An error occurred while retrieving the factory address."}},"summary":"address","tags":["Factory"]}},"/factory/create-vault":{"post":{"description":"Creates a new vault with the specified parameters.\n    POST /create-vault","operationId":"FactoryController_createDefindexVault","parameters":[{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"description":"Parameters for creating a vault","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDefindexVaultDto"}}}},"responses":{"201":{"description":"Vault created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDefindexVaultDto"}}}},"400":{"description":"Bad Request. Missing required parameters."},"404":{"description":"Not Found. No factory contract deployed for this network."},"500":{"description":"Internal Server Error. An error occurred while creating the vault."}},"summary":"create-vault","tags":["Factory"]}},"/factory/create-vault-deposit":{"post":{"description":"Creates a new vault deposit with the specified parameters.\n    POST /create-vault-deposit","operationId":"FactoryController_createDefindexVaultDeposit","parameters":[{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"description":"Parameters for creating a vault deposit","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDefindexVaultDepositDto"}}}},"responses":{"201":{"description":"Vault deposit created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDefindexVaultDepositDto"}}}},"400":{"description":"Bad Request. Missing required parameters."},"404":{"description":"Not Found. No factory contract deployed for this network."},"500":{"description":"Internal Server Error. An error occurred while creating the vault deposit."}},"summary":"create-vault-deposit","tags":["Factory"]}},"/vault/{address}":{"get":{"operationId":"VaultController_getVaultInfo","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["vault"]}},"/vault/{address}/balance":{"get":{"operationId":"VaultController_getVaultBalance","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"from","required":true,"in":"query","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["vault"]}},"/vault/{address}/deposit":{"post":{"operationId":"VaultController_deposit","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DepositDto"}}}},"responses":{"201":{"description":""}},"tags":["vault"]}},"/vault/{address}/withdraw":{"post":{"operationId":"VaultController_withdraw","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WithdrawDto"}}}},"responses":{"201":{"description":""}},"tags":["vault"]}},"/vault/{address}/withdraw-shares":{"post":{"operationId":"VaultController_withdrawShares","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WithdrawSharesDto"}}}},"responses":{"201":{"description":""}},"tags":["vault"]}},"/vault/{address}/rescue":{"post":{"operationId":"VaultController_rescue","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommonVaultStrategyCallerDto"}}}},"responses":{"201":{"description":""}},"tags":["vault"]}},"/vault/{address}/pause-strategy":{"post":{"operationId":"VaultController_pauseStrategy","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommonVaultStrategyCallerDto"}}}},"responses":{"201":{"description":""}},"tags":["vault"]}},"/vault/{address}/unpause-strategy":{"post":{"operationId":"VaultController_unpauseStrategy","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommonVaultStrategyCallerDto"}}}},"responses":{"201":{"description":""}},"tags":["vault"]}},"/vault/{address}/apy":{"get":{"operationId":"VaultController_getApy","parameters":[{"name":"address","required":true,"in":"path","schema":{"type":"string"}},{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["vault"]}},"/send":{"post":{"description":"This endpoint allows users to submit pre-signed DeFindex transactions to the Stellar blockchain without requiring gas fees. The transaction must be a valid DeFindex operation and must be properly signed before submission.","operationId":"StellarController_sendTransaction","parameters":[{"name":"network","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendXdrDto"}}}},"responses":{"200":{"description":"Transaction successfully submitted to the blockchain"},"400":{"description":"Invalid transaction or signature"}},"summary":"Submit a signed DeFindex transaction to the Stellar blockchain","tags":["Stellar"]}}},"info":{"title":"DeFindex API","description":"API documentation for DeFindex endpoints","version":"1.0.0","contact":{},"x-logo":{"url":"https://links.paltalabs.io/defindex-full.svg","backgroundColor":"#0e0e0e","altText":"DeFindex Logo","href":"https://defindex.io"}},"tags":[],"servers":[],"components":{"securitySchemes":{"bearer":{"scheme":"bearer","bearerFormat":"JWT","type":"http"}},"schemas":{"AuthRegisterDto":{"type":"object","properties":{}},"AuthLoginDto":{"type":"object","properties":{"email":{"type":"string","example":"test@example.com"},"password":{"type":"string","example":"strongpassword123"}},"required":["email","password"]},"StrategyDto":{"type":"object","properties":{"address":{"type":"string","description":"Strategy address"},"name":{"type":"string","description":"Strategy name"},"paused":{"type":"boolean","description":"Indicates if the strategy is paused"}},"required":["address","name","paused"]},"AssetStrategySetDto":{"type":"object","properties":{"address":{"type":"string","description":"Asset address","example":"GDAF..."},"strategies":{"description":"Strategies associated with the asset","type":"array","items":{"$ref":"#/components/schemas/StrategyDto"}}},"required":["address","strategies"]},"CreateDefindexVaultDto":{"type":"object","properties":{"roles":{"type":"object","description":"roles assigned to manage the vault","additionalProperties":{"type":"record","format":"string, string"},"example":{"0":"GDAF...","1":"GDAF..."}},"vault_fee_bps":{"type":"number","description":"Fee amount in basis points","example":10},"assets":{"description":"Assets and their strategies","example":[{"address":"CAWS...","strategies":[{"address":"CXAO...","name":"Strategy1","paused":false},{"address":"CVXA...","name":"Strategy2","paused":true}]}],"type":"array","items":{"$ref":"#/components/schemas/AssetStrategySetDto"}},"name_symbol":{"type":"object","description":"Vault metadata: name and symbol","additionalProperties":{"type":"record","format":"string, string"},"example":{"name":"MyVault","symbol":"MVLT"}},"upgradable":{"type":"boolean","description":"Indicates if the vault is upgradable"},"caller":{"type":"string","description":"Caller address, the address that will call the vault creation and sign the transaction","example":"GQWE..."}},"required":["roles","vault_fee_bps","assets","name_symbol","upgradable","caller"]},"CreateDefindexVaultDepositDto":{"type":"object","properties":{"roles":{"type":"object","description":"roles assigned to manage the vault","additionalProperties":{"type":"record","format":"string, string"},"example":{"0":"GDAF...","1":"GDAF..."}},"vault_fee_bps":{"type":"number","description":"Fee amount in basis points","example":10},"assets":{"description":"Assets and their strategies","example":[{"address":"CAWS...","strategies":[{"address":"CXAO...","name":"Strategy1","paused":false},{"address":"CVXA...","name":"Strategy2","paused":true}]}],"type":"array","items":{"$ref":"#/components/schemas/AssetStrategySetDto"}},"name_symbol":{"type":"object","description":"Vault metadata: name and symbol","additionalProperties":{"type":"record","format":"string, string"},"example":{"name":"MyVault","symbol":"MVLT"}},"upgradable":{"type":"boolean","description":"Indicates if the vault is upgradable"},"caller":{"type":"string","description":"Caller address, the address that will call the vault creation and sign the transaction","example":"GQWE..."},"deposit_amounts":{"description":"Deposit amounts","example":[100,200],"type":"array","items":{"type":"number"}}},"required":["roles","vault_fee_bps","assets","name_symbol","upgradable","caller","deposit_amounts"]},"DepositDto":{"type":"object","properties":{"amounts":{"description":"Amounts to deposit in each asset","type":"array","items":{"type":"number"}},"from":{"type":"string","description":"Address of the user making the deposit"},"invest":{"type":"boolean","description":"Invest immediately after deposit"},"slippageBps":{"type":"number","example":"100","description":"Slippage tolerance in basis points (bps). 10000 = 100%, 100 = 1%, 50 = 0.5%. Default is 0 bps (0%)"}},"required":["amounts","from","invest"]},"WithdrawDto":{"type":"object","properties":{"amounts":{"description":"Amounts to withdraw from each asset","type":"array","items":{"type":"number"}},"from":{"type":"string","description":"Address of the user making the withdrawal"},"slippageBps":{"type":"number","example":"100","description":"Slippage tolerance in basis points (bps). 10000 = 100%, 100 = 1%, 50 = 0.5%. Default is 0 bps (0%)"}},"required":["amounts","from"]},"WithdrawSharesDto":{"type":"object","properties":{"shares":{"type":"number","description":"Amount of shares to withdraw"},"from":{"type":"string","description":"Address of the user making the withdrawal"},"slippageBps":{"type":"number","example":"100","description":"Slippage tolerance in basis points (bps). 10000 = 100%, 100 = 1%, 50 = 0.5%. Default is 0 bps (0%)"}},"required":["shares","from"]},"CommonVaultStrategyCallerDto":{"type":"object","properties":{"strategy":{"type":"string","description":"Address of the strategy to rescue"},"caller":{"type":"string","description":"Address of the caller"}},"required":["strategy","caller"]},"SendXdrDto":{"type":"object","properties":{"xdr":{"type":"string","description":"The signed transaction in XDR format"},"launchtube":{"type":"boolean","description":"Whether to use launchtube or not"}},"required":["xdr","launchtube"]}}}}